name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  nix:
    runs-on: ubuntu-latest
    steps:
    - uses: "actions/checkout@v2.4.0"
    - uses: "cachix/install-nix-action@v20"
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - uses: cachix/cachix-action@v12
      with:
        name: haskell-platform
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: nix build .
    - run: ./result/bin/podenv --list
    - run: nix develop .#ci --command run
  cabal:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ghc: ['8.10']
    name: Haskell GHC ${{ matrix.ghc }}
    steps:
    - uses: actions/checkout@v2
    - uses: haskell-actions/setup@v2
      with:
        ghc-version: ${{ matrix.ghc }}
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cabal
          dist-newstyle
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('**/*.cabal','**/cabal.project') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.ghc }}-
          ${{ runner.os }}-
    - run: cabal update
    - run: cabal build --enable-tests
    - run: cabal test --enable-tests --test-show-details=direct
    - run: cabal haddock
    - run: cabal sdist
    - run: cabal check
    - run: cabal install --installdir=/tmp --overwrite-policy=always
  stack:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: haskell-actions/setup@v2
      with:
        ghc-version: "8.10"
        enable-stack: true
    - uses: actions/cache@v4
      with:
        path: ~/.stack
        key: ${{ runner.os }}-${{ hashFiles('**/*.cabal','**/cabal.project', 'stack.yaml') }}
        restore-keys: |
          ${{ runner.os }}-
    - run: stack test --fast --no-terminal --system-ghc --resolver=lts-20.19
